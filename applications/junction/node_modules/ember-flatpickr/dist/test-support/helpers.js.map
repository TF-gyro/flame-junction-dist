{"version":3,"file":"helpers.js","sources":["../../src/test-support/helpers.js"],"sourcesContent":["import { find } from '@ember/test-helpers';\n\n/**\n * Checks if the flatpickr calendar is being displayed.\n *\n * @param {Number} [pickrIndex=0] - Index of flatpickr calendar to be targeted (for when multiple exist)\n * @return {Boolean} Whether or not the calendar is visible\n * @function isFlatpickrOpen\n */\nexport function isFlatpickrOpen(pickrIndex = 0) {\n  const flatpickerCal =\n    document.getElementsByClassName('flatpickr-calendar')[pickrIndex];\n  return flatpickerCal.classList.contains('open');\n}\n\n/**\n * Sets the date in the flatpickr\n *\n * @param {String} selector - CSS3 selector of the element to pull the flatpickr instance from\n * @param {Object} date - A Date Object or array of Date Objects to set as the selected date(s)\n * @param {Boolean} [triggerChange=true] - If true, this forces onChange events to fire\n * @function setFlatpickrDate\n */\nexport function setFlatpickrDate(selector, date, triggerChange = true) {\n  const flatpickrInput =\n    selector instanceof HTMLElement ? selector : find(selector);\n  if (!flatpickrInput) _throwSelectorError(selector, 'setFlatpickrDate');\n  flatpickrInput._flatpickr.setDate(date, triggerChange);\n}\n\n/**\n * @param {String} selector - CSS3 selector of the element to pull the flatpickr instance from\n * @function closeFlatpickrDate\n */\nexport function closeFlatpickrDate(selector) {\n  const flatpickrInput =\n    selector instanceof HTMLElement ? selector : find(selector);\n  if (!flatpickrInput) _throwSelectorError(selector, 'closeFlatpickrDate');\n  flatpickrInput._flatpickr.close();\n}\n\n/**\n * Clears out the flatpickr selectedDates attribute as well as the associated input.\n * @param {String} selector - CSS3 selector of the element to pull the flatpickr instance from\n * @function clearFlatpickrDate\n */\nexport function clearFlatpickrDate(selector) {\n  const flatpickrInput =\n    selector instanceof HTMLElement ? selector : find(selector);\n  if (!flatpickrInput) _throwSelectorError(selector, 'clearFlatpickrDate');\n  flatpickrInput._flatpickr.clear(); // eslint-disable-line\n}\n\nfunction _throwSelectorError(selector, functionName) {\n  throw new Error(\n    `${functionName}() - No input was found using selector '${selector}'`,\n  );\n}\n"],"names":["isFlatpickrOpen","pickrIndex","flatpickerCal","document","getElementsByClassName","classList","contains","setFlatpickrDate","selector","date","triggerChange","flatpickrInput","HTMLElement","find","_throwSelectorError","_flatpickr","setDate","closeFlatpickrDate","close","clearFlatpickrDate","clear","functionName","Error"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,eAAeA,CAACC,UAAU,GAAG,CAAC,EAAE;EAC9C,MAAMC,aAAa,GACjBC,QAAQ,CAACC,sBAAsB,CAAC,oBAAoB,CAAC,CAACH,UAAU,CAAC,CAAA;AACnE,EAAA,OAAOC,aAAa,CAACG,SAAS,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAA;AACjD,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,gBAAgBA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,aAAa,GAAG,IAAI,EAAE;EACrE,MAAMC,cAAc,GAClBH,QAAQ,YAAYI,WAAW,GAAGJ,QAAQ,GAAGK,IAAI,CAACL,QAAQ,CAAC,CAAA;EAC7D,IAAI,CAACG,cAAc,EAAEG,mBAAmB,CAACN,QAAQ,EAAE,kBAAkB,CAAC,CAAA;EACtEG,cAAc,CAACI,UAAU,CAACC,OAAO,CAACP,IAAI,EAAEC,aAAa,CAAC,CAAA;AACxD,CAAA;;AAEA;AACA;AACA;AACA;AACO,SAASO,kBAAkBA,CAACT,QAAQ,EAAE;EAC3C,MAAMG,cAAc,GAClBH,QAAQ,YAAYI,WAAW,GAAGJ,QAAQ,GAAGK,IAAI,CAACL,QAAQ,CAAC,CAAA;EAC7D,IAAI,CAACG,cAAc,EAAEG,mBAAmB,CAACN,QAAQ,EAAE,oBAAoB,CAAC,CAAA;AACxEG,EAAAA,cAAc,CAACI,UAAU,CAACG,KAAK,EAAE,CAAA;AACnC,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,kBAAkBA,CAACX,QAAQ,EAAE;EAC3C,MAAMG,cAAc,GAClBH,QAAQ,YAAYI,WAAW,GAAGJ,QAAQ,GAAGK,IAAI,CAACL,QAAQ,CAAC,CAAA;EAC7D,IAAI,CAACG,cAAc,EAAEG,mBAAmB,CAACN,QAAQ,EAAE,oBAAoB,CAAC,CAAA;AACxEG,EAAAA,cAAc,CAACI,UAAU,CAACK,KAAK,EAAE,CAAC;AACpC,CAAA;AAEA,SAASN,mBAAmBA,CAACN,QAAQ,EAAEa,YAAY,EAAE;EACnD,MAAM,IAAIC,KAAK,CACZ,CAAA,EAAED,YAAa,CAA0Cb,wCAAAA,EAAAA,QAAS,GACrE,CAAC,CAAA;AACH;;;;"}