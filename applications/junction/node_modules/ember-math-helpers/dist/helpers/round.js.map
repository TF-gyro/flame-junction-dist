{"version":3,"file":"round.js","sources":["../../src/helpers/round.ts"],"sourcesContent":["import { helper } from '@ember/component/helper';\n\nexport interface RoundSignature {\n  Args: {\n    Named: { decimals?: number; exp?: number };\n    Positional: [number];\n  };\n  Return: number;\n}\n\n// adapted from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round#Decimal_rounding\n/**\n * Decimal adjustment of a number.\n *\n * @private\n * @param value The number.\n * @param exp The exponent (the 10 logarithm of the adjustment base).\n * @return {number} The adjusted value.\n */\nfunction decimalAdjust(value: number, exp: number): number {\n  // If the exp is undefined or zero...\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math.round(value);\n  }\n\n  value = +value;\n  exp = +exp;\n\n  // If the value is not a number or the exp is not an integer...\n  if (\n    value === null ||\n    isNaN(value) ||\n    !(typeof exp === 'number' && exp % 1 === 0)\n  ) {\n    return NaN;\n  }\n\n  // If the value is negative...\n  if (value < 0) {\n    return -decimalAdjust(-value, exp);\n  }\n\n  // Shift\n  let splitValue = value.toString().split('e');\n  value = Math.round(\n    +`${splitValue[0]}e${splitValue[1] ? +splitValue[1] - exp : -exp}`,\n  );\n  // Shift back\n  splitValue = value.toString().split('e');\n\n  return +`${splitValue[0]}e${splitValue[1] ? +splitValue[1] + exp : exp}`;\n}\n\n/**\n * Executes `Math.round` on the number passed to the helper.\n *\n * ```hbs\n * {{round a}}\n * ```\n *\n * You can provide optional named arguments for `decimals` and `exp` that will adjust\n * the number of decimals used for rounding and the exponent (the 10 logarithm of the adjustment base) accordingly.\n *\n * For example:\n *\n * ```hbs\n * {{round a decimals=2}}\n * ```\n *\n * @function round\n * @param {number} number The number to pass to `Math.round`\n * @param {object} named The set of named arguments, currently `decimals` and `exp`.\n * @param {number} [named.decimals] An optional param to specify the number of decimals to round to.\n * @param {number} [named.exp] An optional param to specify the exponent (the 10 logarithm of the adjustment base).\n * @return {number} The number rounded based on the number of decimals specified.\n */\nexport function round(\n  [number]: [number],\n  namedArgs: RoundSignature['Args']['Named'],\n) {\n  if (namedArgs) {\n    if (namedArgs.decimals) {\n      return decimalAdjust(number, -namedArgs.decimals);\n    }\n\n    if (namedArgs.exp) {\n      return decimalAdjust(number, namedArgs.exp);\n    }\n  }\n\n  return Math.round(number);\n}\n\nexport default helper<RoundSignature>(round);\n"],"names":["decimalAdjust","value","exp","Math","round","isNaN","NaN","splitValue","toString","split","number","namedArgs","decimals","helper"],"mappings":";;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAaA,CAACC,KAAa,EAAEC,GAAW,EAAU;AACzD;EACA,IAAI,OAAOA,GAAG,KAAK,WAAW,IAAI,CAACA,GAAG,KAAK,CAAC,EAAE;AAC5C,IAAA,OAAOC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC;AAC1B;EAEAA,KAAK,GAAG,CAACA,KAAK;EACdC,GAAG,GAAG,CAACA,GAAG;;AAEV;EACA,IACED,KAAK,KAAK,IAAI,IACdI,KAAK,CAACJ,KAAK,CAAC,IACZ,EAAE,OAAOC,GAAG,KAAK,QAAQ,IAAIA,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAC3C;AACA,IAAA,OAAOI,GAAG;AACZ;;AAEA;EACA,IAAIL,KAAK,GAAG,CAAC,EAAE;AACb,IAAA,OAAO,CAACD,aAAa,CAAC,CAACC,KAAK,EAAEC,GAAG,CAAC;AACpC;;AAEA;EACA,IAAIK,UAAU,GAAGN,KAAK,CAACO,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;AAC5CR,EAAAA,KAAK,GAAGE,IAAI,CAACC,KAAK,CAChB,CAAC,CAAGG,EAAAA,UAAU,CAAC,CAAC,CAAC,CAAA,CAAA,EAAIA,UAAU,CAAC,CAAC,CAAC,GAAG,CAACA,UAAU,CAAC,CAAC,CAAC,GAAGL,GAAG,GAAG,CAACA,GAAG,CAAA,CAClE,CAAC;AACD;EACAK,UAAU,GAAGN,KAAK,CAACO,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;EAExC,OAAO,CAAC,GAAGF,UAAU,CAAC,CAAC,CAAC,CAAA,CAAA,EAAIA,UAAU,CAAC,CAAC,CAAC,GAAG,CAACA,UAAU,CAAC,CAAC,CAAC,GAAGL,GAAG,GAAGA,GAAG,CAAE,CAAA;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,KAAKA,CACnB,CAACM,MAAM,CAAW,EAClBC,SAA0C,EAC1C;AACA,EAAA,IAAIA,SAAS,EAAE;IACb,IAAIA,SAAS,CAACC,QAAQ,EAAE;MACtB,OAAOZ,aAAa,CAACU,MAAM,EAAE,CAACC,SAAS,CAACC,QAAQ,CAAC;AACnD;IAEA,IAAID,SAAS,CAACT,GAAG,EAAE;AACjB,MAAA,OAAOF,aAAa,CAACU,MAAM,EAAEC,SAAS,CAACT,GAAG,CAAC;AAC7C;AACF;AAEA,EAAA,OAAOC,IAAI,CAACC,KAAK,CAACM,MAAM,CAAC;AAC3B;AAEA,cAAeG,MAAM,CAAiBT,KAAK,CAAC;;;;"}